# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: Query
    mutation: Mutation
}

type Mutation {
    "Obtain JSON Web Token mutation"
    login(password: String!, username: String!): ObtainJSONWebToken
    refreshToken(token: String): Refresh
    register(email: String!, firstname: String, lastname: String, password: String!, username: String!): Register
    verifyToken(token: String): Verify
}

"Obtain JSON Web Token mutation"
type ObtainJSONWebToken {
    payload: GenericScalar!
    refreshExpiresIn: Int!
    token: String!
}

type Query {
    me: UserType
    users: [UserType]
}

type Refresh {
    payload: GenericScalar!
    refreshExpiresIn: Int!
    token: String!
}

type Register {
    message: String
}

type UserType {
    dateJoined: DateTime!
    email: String!
    firstName: String!
    id: ID!
    "Designates whether this user should be treated as active. Unselect this instead of deleting accounts."
    isActive: Boolean!
    "Designates whether the user can log into this admin site."
    isStaff: Boolean!
    "Designates that this user has all permissions without explicitly assigning them."
    isSuperuser: Boolean!
    lastLogin: DateTime
    lastName: String!
    password: String!
    "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only."
    username: String!
}

type Verify {
    payload: GenericScalar!
}


"""
The `DateTime` scalar type represents a DateTime
value as specified by
[iso8601](https://en.wikipedia.org/wiki/ISO_8601).
"""
scalar DateTime

"""
The `GenericScalar` scalar type represents a generic
GraphQL scalar value that could be:
String, Boolean, Int, Float, List or Object.
"""
scalar GenericScalar
